
AVRASM ver. 2.1.30  C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm Wed Jan 15 22:17:23 2020

C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1094): warning: Register r4 already defined by the .DEF directive
C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1095): warning: Register r5 already defined by the .DEF directive
C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1096): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.34 Evaluation
                 ;(C) Copyright 1998-2018 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 1
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _icr_val=R4
                 	.DEF _icr_val_msb=R5
                 	.DEF _i=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 008b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1129): warning: .cseg .db misalignment - padding zero byte
00002a 0000      	.DB  0x0
                 
                 _0x3:
00002b 4240
C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1132): warning: .cseg .db misalignment - padding zero byte
00002c 000f      	.DB  0x40,0x42,0xF
                 _0x4:
00002d 0108
00002e 0108
00002f 0129
000030 0108      	.DB  0x8,0x1,0x8,0x1,0x29,0x1,0x8,0x1
000031 0160
000032 014a
000033 0108
000034 0108      	.DB  0x60,0x1,0x4A,0x1,0x8,0x1,0x8,0x1
000035 0129
000036 0108
000037 018c
000038 0160      	.DB  0x29,0x1,0x8,0x1,0x8C,0x1,0x60,0x1
000039 0108
00003a 0108
00003b 0108
00003c 01b8      	.DB  0x8,0x1,0x8,0x1,0x8,0x1,0xB8,0x1
00003d 0160
00003e 0160
00003f 014a
000040 0129      	.DB  0x60,0x1,0x60,0x1,0x4A,0x1,0x29,0x1
000041 01d2
000042 01d2
000043 01b8
000044 0160      	.DB  0xD2,0x1,0xD2,0x1,0xB8,0x1,0x60,0x1
000045 018c
000046 0160      	.DB  0x8C,0x1,0x60,0x1
                 _0x5:
000047 00fa
000048 00fa
000049 03e8
00004a 03e8      	.DB  0xFA,0x0,0xFA,0x0,0xE8,0x3,0xE8,0x3
00004b 03e8
00004c 07d0
00004d 00fa
00004e 00fa      	.DB  0xE8,0x3,0xD0,0x7,0xFA,0x0,0xFA,0x0
00004f 03e8
000050 03e8
000051 03e8
000052 07d0      	.DB  0xE8,0x3,0xE8,0x3,0xE8,0x3,0xD0,0x7
000053 00fa
000054 00fa
000055 03e8
000056 03e8      	.DB  0xFA,0x0,0xFA,0x0,0xE8,0x3,0xE8,0x3
000057 01f4
000058 00fa
000059 03e8
00005a 07d0      	.DB  0xF4,0x1,0xFA,0x0,0xE8,0x3,0xD0,0x7
00005b 00fa
00005c 00fa
00005d 03e8
00005e 03e8      	.DB  0xFA,0x0,0xFA,0x0,0xE8,0x3,0xE8,0x3
00005f 03e8
000060 07d0      	.DB  0xE8,0x3,0xD0,0x7
                 _0x6:
000061 01f4
000062 00fa
000063 00fa
000064 00fa      	.DB  0xF4,0x1,0xFA,0x0,0xFA,0x0,0xFA,0x0
000065 00fa
000066 01f4
000067 01f4
000068 00fa      	.DB  0xFA,0x0,0xF4,0x1,0xF4,0x1,0xFA,0x0
000069 00fa
00006a 00fa
00006b 00fa
00006c 01f4      	.DB  0xFA,0x0,0xFA,0x0,0xFA,0x0,0xF4,0x1
00006d 01f4
00006e 00fa
00006f 00fa
000070 00fa      	.DB  0xF4,0x1,0xFA,0x0,0xFA,0x0,0xFA,0x0
000071 00fa
000072 00fa
000073 00fa
000074 01f4      	.DB  0xFA,0x0,0xFA,0x0,0xFA,0x0,0xF4,0x1
000075 01f4
000076 00fa
000077 00fa
000078 00fa      	.DB  0xF4,0x1,0xFA,0x0,0xFA,0x0,0xFA,0x0
000079 00fa
C:\Users\kh alamatsaz\Desktop\microproj3\P1_Birthday\Debug\List\2.asm(1156): warning: .cseg .db misalignment - padding zero byte
00007a 00fa      	.DB  0xFA,0x0,0xFA
                 
                 __GLOBAL_INI_TBL:
00007b 0001      	.DW  0x01
00007c 0007      	.DW  0x07
00007d 0054      	.DW  __REG_VARS*2
                 
00007e 0003      	.DW  0x03
00007f 0260      	.DW  _one_m
000080 0056      	.DW  _0x3*2
                 
000081 0034      	.DW  0x34
000082 026c      	.DW  _notes
000083 005a      	.DW  _0x4*2
                 
000084 0034      	.DW  0x34
000085 02a0      	.DW  _lengths
000086 008e      	.DW  _0x5*2
                 
000087 0033      	.DW  0x33
000088 02d4      	.DW  _delays
000089 00c2      	.DW  _0x6*2
                 
                 _0xFFFFFFFF:
00008a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00008b 94f8      	CLI
00008c 27ee      	CLR  R30
00008d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00008e e0f1      	LDI  R31,1
00008f bff5      	OUT  MCUCR,R31
000090 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000091 e08d      	LDI  R24,(14-2)+1
000092 e0a2      	LDI  R26,2
000093 27bb      	CLR  R27
                 __CLEAR_REG:
000094 93ed      	ST   X+,R30
000095 958a      	DEC  R24
000096 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000097 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000098 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000099 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00009a 93ed      	ST   X+,R30
00009b 9701      	SBIW R24,1
00009c f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00009d efe6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00009e e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00009f 9185      	LPM  R24,Z+
0000a0 9195      	LPM  R25,Z+
0000a1 9700      	SBIW R24,0
0000a2 f061      	BREQ __GLOBAL_INI_END
0000a3 91a5      	LPM  R26,Z+
0000a4 91b5      	LPM  R27,Z+
0000a5 9005      	LPM  R0,Z+
0000a6 9015      	LPM  R1,Z+
0000a7 01bf      	MOVW R22,R30
0000a8 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000a9 9005      	LPM  R0,Z+
0000aa 920d      	ST   X+,R0
0000ab 9701      	SBIW R24,1
0000ac f7e1      	BRNE __GLOBAL_INI_LOOP
0000ad 01fb      	MOVW R30,R22
0000ae cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000af e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000b0 bfed      	OUT  SPL,R30
0000b1 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000b2 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000b3 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000b4 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000b5 940c 00b7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;#define del_coef 0.5
                 ;
                 ;long int one_m = 1000000 ;
                 
                 	.DSEG
                 ;long int freq_hz ;
                 ;long int icr_pre_val ;
                 ;int icr_val ;
                 ;char i = 0 ;
                 ;
                 ;unsigned int notes[] = {264,264,297,264,352,330,264,264,297,264,396,352,264,264,264,440,352,352,330,297,466,466,440,352, ...
                 ;unsigned int lengths[] = {250,250,1000,1000,1000,2000,250,250,1000,1000,1000,2000,250,250,1000,1000,500,250,1000,2000,25 ...
                 ;unsigned int delays[] = {500,250,250,250,250,500,500,250,250,250,250,500,500,250,250,250,250,250,250,500,500,250,250,250 ...
                 ;
                 ;void freq_cal();
                 ;
                 ;void main(void)
                 ; 0000 0013 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0014 // Port D initialization
                 ; 0000 0015 // Function: Bit7=In Bit6=In Bit5=Out Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0016 DDRD=(0<<DDD7) | (0<<DDD6) | (1<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
0000b7 e2e0      	LDI  R30,LOW(32)
0000b8 bbe1      	OUT  0x11,R30
                 ; 0000 0017 // State: Bit7=P Bit6=T Bit5=0 Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0018 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000b9 e0e0      	LDI  R30,LOW(0)
0000ba bbe2      	OUT  0x12,R30
                 ; 0000 0019 
                 ; 0000 001A 
                 ; 0000 001B // Timer/Counter 1 initialization
                 ; 0000 001C // Clock source: System Clock
                 ; 0000 001D // Clock value: 1000.000 kHz
                 ; 0000 001E // Mode: Fast PWM top=ICR1
                 ; 0000 001F // OC1A output: Non-Inverted PWM
                 ; 0000 0020 // OC1B output: Disconnected
                 ; 0000 0021 // Noise Canceler: Off
                 ; 0000 0022 // Input Capture on Falling Edge
                 ; 0000 0023 // Timer Period: 1 us
                 ; 0000 0024 // Output Pulse(s):
                 ; 0000 0025 // OC1A Period: 1 us
                 ; 0000 0026 // Timer1 Overflow Interrupt: Off
                 ; 0000 0027 // Input Capture Interrupt: Off
                 ; 0000 0028 // Compare A Match Interrupt: Off
                 ; 0000 0029 // Compare B Match Interrupt: Off
                 ; 0000 002A TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (1<<WGM11) | (0<<WGM10);
0000bb e8e2      	LDI  R30,LOW(130)
0000bc bdef      	OUT  0x2F,R30
                 ; 0000 002B TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
0000bd e1ea      	LDI  R30,LOW(26)
0000be bdee      	OUT  0x2E,R30
                 ; 0000 002C TCNT1H=0x00;
0000bf e0e0      	LDI  R30,LOW(0)
0000c0 bded      	OUT  0x2D,R30
                 ; 0000 002D TCNT1L=0x00;
0000c1 bdec      	OUT  0x2C,R30
                 ; 0000 002E ICR1H=0x00;
0000c2 bde7      	OUT  0x27,R30
                 ; 0000 002F ICR1L=0x00;
0000c3 bde6      	OUT  0x26,R30
                 ; 0000 0030 OCR1AH=0x00;
0000c4 bdeb      	OUT  0x2B,R30
                 ; 0000 0031 OCR1AL=0x00;
0000c5 bdea      	OUT  0x2A,R30
                 ; 0000 0032 OCR1BH=0x00;
0000c6 bde9      	OUT  0x29,R30
                 ; 0000 0033 OCR1BL=0x00;
0000c7 bde8      	OUT  0x28,R30
                 ; 0000 0034 
                 ; 0000 0035 while (1)
                 _0x7:
                 ; 0000 0036     {
                 ; 0000 0037 
                 ; 0000 0038     freq_hz = notes[i] ;
0000c8 2de7      	MOV  R30,R7
0000c9 e6ac      	LDI  R26,LOW(_notes)
0000ca e0b2      	LDI  R27,HIGH(_notes)
0000cb d04d      	RCALL SUBOPT_0x0
0000cc 2766      	CLR  R22
0000cd 2777      	CLR  R23
0000ce d052      	RCALL SUBOPT_0x1
                 ; 0000 0039     freq_cal();
                 ; 0000 003A     delay_ms(lengths[i]*del_coef);
0000cf eaa0      	LDI  R26,LOW(_lengths)
0000d0 e0b2      	LDI  R27,HIGH(_lengths)
0000d1 d047      	RCALL SUBOPT_0x0
0000d2 d059      	RCALL SUBOPT_0x2
                 ; 0000 003B     freq_hz = 50000 ;  //voice with no sound
0000d3 d063      	RCALL SUBOPT_0x3
0000d4 d04c      	RCALL SUBOPT_0x1
                 ; 0000 003C     freq_cal();
                 ; 0000 003D     delay_ms(delays[i]*del_coef);
0000d5 eda4      	LDI  R26,LOW(_delays)
0000d6 e0b2      	LDI  R27,HIGH(_delays)
0000d7 d041      	RCALL SUBOPT_0x0
0000d8 d053      	RCALL SUBOPT_0x2
                 ; 0000 003E 
                 ; 0000 003F     i++;
0000d9 9473      	INC  R7
                 ; 0000 0040     if(i==26)
0000da e1ea      	LDI  R30,LOW(26)
0000db 15e7      	CP   R30,R7
0000dc f471      	BRNE _0xA
                 ; 0000 0041         {
                 ; 0000 0042         freq_hz = 50000 ;
0000dd d059      	RCALL SUBOPT_0x3
0000de 93e0 0264 	STS  _freq_hz,R30
0000e0 93f0 0265 	STS  _freq_hz+1,R31
0000e2 9360 0266 	STS  _freq_hz+2,R22
0000e4 9370 0267 	STS  _freq_hz+3,R23
                 ; 0000 0043         freq_cal();
0000e6 d006      	RCALL _freq_cal
                 ; 0000 0044         i=0;
0000e7 2477      	CLR  R7
                 ; 0000 0045         delay_ms(3000);
0000e8 eba8      	LDI  R26,LOW(3000)
0000e9 e0bb      	LDI  R27,HIGH(3000)
0000ea d1ab      	RCALL _delay_ms
                 ; 0000 0046         }
                 ; 0000 0047 
                 ; 0000 0048     }
                 _0xA:
0000eb cfdc      	RJMP _0x7
                 ; 0000 0049 
                 ; 0000 004A }
                 _0xB:
0000ec cfff      	RJMP _0xB
                 ; .FEND
                 ;
                 ;
                 ;void freq_cal()
                 ; 0000 004E     {//ctc
                 _freq_cal:
                 ; .FSTART _freq_cal
                 ; 0000 004F         icr_pre_val = one_m / freq_hz ; //top
0000ed 91e0 0264 	LDS  R30,_freq_hz
0000ef 91f0 0265 	LDS  R31,_freq_hz+1
0000f1 9160 0266 	LDS  R22,_freq_hz+2
0000f3 9170 0267 	LDS  R23,_freq_hz+3
0000f5 91a0 0260 	LDS  R26,_one_m
0000f7 91b0 0261 	LDS  R27,_one_m+1
0000f9 9180 0262 	LDS  R24,_one_m+2
0000fb 9190 0263 	LDS  R25,_one_m+3
0000fd d098      	RCALL __DIVD21
0000fe 93e0 0268 	STS  _icr_pre_val,R30
000100 93f0 0269 	STS  _icr_pre_val+1,R31
000102 9360 026a 	STS  _icr_pre_val+2,R22
000104 9370 026b 	STS  _icr_pre_val+3,R23
                 ; 0000 0050         icr_val = icr_pre_val ;
                +
000106 9040 0268+LDS R4 , 0 + ( _icr_pre_val )
000108 9050 0269+LDS R5 , 0 + ( _icr_pre_val ) + 1
                 	__GETWRMN 4,5,0,_icr_pre_val
                 ; 0000 0051         ICR1H= ( icr_val >> 8 );  //shift high value and save
00010a 01f2      	MOVW R30,R4
00010b d044      	RCALL __ASRW8
00010c bde7      	OUT  0x27,R30
                 ; 0000 0052         ICR1L= ( icr_val & 0xFF );
00010d 2de4      	MOV  R30,R4
00010e bde6      	OUT  0x26,R30
                 ; 0000 0053         icr_val = icr_val / 2 ;//pwm
00010f 01d2      	MOVW R26,R4
000110 e0e2      	LDI  R30,LOW(2)
000111 e0f0      	LDI  R31,HIGH(2)
000112 d05a      	RCALL __DIVW21
000113 012f      	MOVW R4,R30
                 ; 0000 0054         OCR1AH = ( icr_val >> 8 );
000114 d03b      	RCALL __ASRW8
000115 bdeb      	OUT  0x2B,R30
                 ; 0000 0055         OCR1AL = ( icr_val & 0xFF );
000116 2de4      	MOV  R30,R4
000117 bdea      	OUT  0x2A,R30
                 ; 0000 0056     }
000118 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _one_m:
000260           	.BYTE 0x4
                 _freq_hz:
000264           	.BYTE 0x4
                 _icr_pre_val:
000268           	.BYTE 0x4
                 _notes:
00026c           	.BYTE 0x34
                 _lengths:
0002a0           	.BYTE 0x34
                 _delays:
0002d4           	.BYTE 0x34
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x0:
000119 e0f0      	LDI  R31,0
00011a 0fee      	LSL  R30
00011b 1fff      	ROL  R31
00011c 0fae      	ADD  R26,R30
00011d 1fbf      	ADC  R27,R31
00011e 91ed      	LD   R30,X+
00011f 91fd      	LD   R31,X+
000120 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1:
000121 93e0 0264 	STS  _freq_hz,R30
000123 93f0 0265 	STS  _freq_hz+1,R31
000125 9360 0266 	STS  _freq_hz+2,R22
000127 9370 0267 	STS  _freq_hz+3,R23
000129 dfc3      	RCALL _freq_cal
00012a 2de7      	MOV  R30,R7
00012b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
00012c 2766      	CLR  R22
00012d 2777      	CLR  R23
00012e d0ec      	RCALL __CDF1
                +
00012f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000130 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000131 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000132 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000133 d114      	RCALL __MULF12
000134 d0ad      	RCALL __CFD1U
000135 01df      	MOVW R26,R30
000136 c15f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000137 e5e0     +LDI R30 , LOW ( 0xC350 )
000138 ecf3     +LDI R31 , HIGH ( 0xC350 )
000139 e060     +LDI R22 , BYTE3 ( 0xC350 )
00013a e070     +LDI R23 , BYTE4 ( 0xC350 )
                 	__GETD1N 0xC350
00013b 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __ANEGW1:
00013c 95f1      	NEG  R31
00013d 95e1      	NEG  R30
00013e 40f0      	SBCI R31,0
00013f 9508      	RET
                 
                 __ANEGD1:
000140 95f0      	COM  R31
000141 9560      	COM  R22
000142 9570      	COM  R23
000143 95e1      	NEG  R30
000144 4fff      	SBCI R31,-1
000145 4f6f      	SBCI R22,-1
000146 4f7f      	SBCI R23,-1
000147 9508      	RET
                 
                 __ANEGD2:
000148 95b0      	COM  R27
000149 9580      	COM  R24
00014a 9590      	COM  R25
00014b 95a1      	NEG  R26
00014c 4fbf      	SBCI R27,-1
00014d 4f8f      	SBCI R24,-1
00014e 4f9f      	SBCI R25,-1
00014f 9508      	RET
                 
                 __ASRW8:
000150 2fef      	MOV  R30,R31
000151 27ff      	CLR  R31
000152 fde7      	SBRC R30,7
000153 efff      	SER  R31
000154 9508      	RET
                 
                 __CWD1:
000155 2f6f      	MOV  R22,R31
000156 0f66      	ADD  R22,R22
000157 0b66      	SBC  R22,R22
000158 2f76      	MOV  R23,R22
000159 9508      	RET
                 
                 __DIVW21U:
00015a 2400      	CLR  R0
00015b 2411      	CLR  R1
00015c e190      	LDI  R25,16
                 __DIVW21U1:
00015d 0faa      	LSL  R26
00015e 1fbb      	ROL  R27
00015f 1c00      	ROL  R0
000160 1c11      	ROL  R1
000161 1a0e      	SUB  R0,R30
000162 0a1f      	SBC  R1,R31
000163 f418      	BRCC __DIVW21U2
000164 0e0e      	ADD  R0,R30
000165 1e1f      	ADC  R1,R31
000166 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
000167 60a1      	SBR  R26,1
                 __DIVW21U3:
000168 959a      	DEC  R25
000169 f799      	BRNE __DIVW21U1
00016a 01fd      	MOVW R30,R26
00016b 01d0      	MOVW R26,R0
00016c 9508      	RET
                 
                 __DIVW21:
00016d d02d      	RCALL __CHKSIGNW
00016e dfeb      	RCALL __DIVW21U
00016f f40e      	BRTC __DIVW211
000170 dfcb      	RCALL __ANEGW1
                 __DIVW211:
000171 9508      	RET
                 
                 __DIVD21U:
000172 933f      	PUSH R19
000173 934f      	PUSH R20
000174 935f      	PUSH R21
000175 2400      	CLR  R0
000176 2411      	CLR  R1
000177 01a0      	MOVW R20,R0
000178 e230      	LDI  R19,32
                 __DIVD21U1:
000179 0faa      	LSL  R26
00017a 1fbb      	ROL  R27
00017b 1f88      	ROL  R24
00017c 1f99      	ROL  R25
00017d 1c00      	ROL  R0
00017e 1c11      	ROL  R1
00017f 1f44      	ROL  R20
000180 1f55      	ROL  R21
000181 1a0e      	SUB  R0,R30
000182 0a1f      	SBC  R1,R31
000183 0b46      	SBC  R20,R22
000184 0b57      	SBC  R21,R23
000185 f428      	BRCC __DIVD21U2
000186 0e0e      	ADD  R0,R30
000187 1e1f      	ADC  R1,R31
000188 1f46      	ADC  R20,R22
000189 1f57      	ADC  R21,R23
00018a c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00018b 60a1      	SBR  R26,1
                 __DIVD21U3:
00018c 953a      	DEC  R19
00018d f759      	BRNE __DIVD21U1
00018e 01fd      	MOVW R30,R26
00018f 01bc      	MOVW R22,R24
000190 01d0      	MOVW R26,R0
000191 01ca      	MOVW R24,R20
000192 915f      	POP  R21
000193 914f      	POP  R20
000194 913f      	POP  R19
000195 9508      	RET
                 
                 __DIVD21:
000196 d012      	RCALL __CHKSIGND
000197 dfda      	RCALL __DIVD21U
000198 f40e      	BRTC __DIVD211
000199 dfa6      	RCALL __ANEGD1
                 __DIVD211:
00019a 9508      	RET
                 
                 __CHKSIGNW:
00019b 94e8      	CLT
00019c fff7      	SBRS R31,7
00019d c002      	RJMP __CHKSW1
00019e df9d      	RCALL __ANEGW1
00019f 9468      	SET
                 __CHKSW1:
0001a0 ffb7      	SBRS R27,7
0001a1 c006      	RJMP __CHKSW2
0001a2 95b1      	NEG  R27
0001a3 95a1      	NEG  R26
0001a4 40b0      	SBCI R27,0
0001a5 f800      	BLD  R0,0
0001a6 9403      	INC  R0
0001a7 fa00      	BST  R0,0
                 __CHKSW2:
0001a8 9508      	RET
                 
                 __CHKSIGND:
0001a9 94e8      	CLT
0001aa ff77      	SBRS R23,7
0001ab c002      	RJMP __CHKSD1
0001ac df93      	RCALL __ANEGD1
0001ad 9468      	SET
                 __CHKSD1:
0001ae ff97      	SBRS R25,7
0001af c004      	RJMP __CHKSD2
0001b0 df97      	RCALL __ANEGD2
0001b1 f800      	BLD  R0,0
0001b2 9403      	INC  R0
0001b3 fa00      	BST  R0,0
                 __CHKSD2:
0001b4 9508      	RET
                 
                 __ROUND_REPACK:
0001b5 2355      	TST  R21
0001b6 f442      	BRPL __REPACK
0001b7 3850      	CPI  R21,0x80
0001b8 f411      	BRNE __ROUND_REPACK0
0001b9 ffe0      	SBRS R30,0
0001ba c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0001bb 9631      	ADIW R30,1
0001bc 1f69      	ADC  R22,R25
0001bd 1f79      	ADC  R23,R25
0001be f06b      	BRVS __REPACK1
                 
                 __REPACK:
0001bf e850      	LDI  R21,0x80
0001c0 2757      	EOR  R21,R23
0001c1 f411      	BRNE __REPACK0
0001c2 935f      	PUSH R21
0001c3 c073      	RJMP __ZERORES
                 __REPACK0:
0001c4 3f5f      	CPI  R21,0xFF
0001c5 f031      	BREQ __REPACK1
0001c6 0f66      	LSL  R22
0001c7 0c00      	LSL  R0
0001c8 9557      	ROR  R21
0001c9 9567      	ROR  R22
0001ca 2f75      	MOV  R23,R21
0001cb 9508      	RET
                 __REPACK1:
0001cc 935f      	PUSH R21
0001cd 2000      	TST  R0
0001ce f00a      	BRMI __REPACK2
0001cf c072      	RJMP __MAXRES
                 __REPACK2:
0001d0 c06b      	RJMP __MINRES
                 
                 __UNPACK:
0001d1 e850      	LDI  R21,0x80
0001d2 2e19      	MOV  R1,R25
0001d3 2215      	AND  R1,R21
0001d4 0f88      	LSL  R24
0001d5 1f99      	ROL  R25
0001d6 2795      	EOR  R25,R21
0001d7 0f55      	LSL  R21
0001d8 9587      	ROR  R24
                 
                 __UNPACK1:
0001d9 e850      	LDI  R21,0x80
0001da 2e07      	MOV  R0,R23
0001db 2205      	AND  R0,R21
0001dc 0f66      	LSL  R22
0001dd 1f77      	ROL  R23
0001de 2775      	EOR  R23,R21
0001df 0f55      	LSL  R21
0001e0 9567      	ROR  R22
0001e1 9508      	RET
                 
                 __CFD1U:
0001e2 9468      	SET
0001e3 c001      	RJMP __CFD1U0
                 __CFD1:
0001e4 94e8      	CLT
                 __CFD1U0:
0001e5 935f      	PUSH R21
0001e6 dff2      	RCALL __UNPACK1
0001e7 3870      	CPI  R23,0x80
0001e8 f018      	BRLO __CFD10
0001e9 3f7f      	CPI  R23,0xFF
0001ea f408      	BRCC __CFD10
0001eb c04b      	RJMP __ZERORES
                 __CFD10:
0001ec e156      	LDI  R21,22
0001ed 1b57      	SUB  R21,R23
0001ee f4aa      	BRPL __CFD11
0001ef 9551      	NEG  R21
0001f0 3058      	CPI  R21,8
0001f1 f40e      	BRTC __CFD19
0001f2 3059      	CPI  R21,9
                 __CFD19:
0001f3 f030      	BRLO __CFD17
0001f4 efef      	SER  R30
0001f5 efff      	SER  R31
0001f6 ef6f      	SER  R22
0001f7 e77f      	LDI  R23,0x7F
0001f8 f977      	BLD  R23,7
0001f9 c01a      	RJMP __CFD15
                 __CFD17:
0001fa 2777      	CLR  R23
0001fb 2355      	TST  R21
0001fc f0b9      	BREQ __CFD15
                 __CFD18:
0001fd 0fee      	LSL  R30
0001fe 1fff      	ROL  R31
0001ff 1f66      	ROL  R22
000200 1f77      	ROL  R23
000201 955a      	DEC  R21
000202 f7d1      	BRNE __CFD18
000203 c010      	RJMP __CFD15
                 __CFD11:
000204 2777      	CLR  R23
                 __CFD12:
000205 3058      	CPI  R21,8
000206 f028      	BRLO __CFD13
000207 2fef      	MOV  R30,R31
000208 2ff6      	MOV  R31,R22
000209 2f67      	MOV  R22,R23
00020a 5058      	SUBI R21,8
00020b cff9      	RJMP __CFD12
                 __CFD13:
00020c 2355      	TST  R21
00020d f031      	BREQ __CFD15
                 __CFD14:
00020e 9576      	LSR  R23
00020f 9567      	ROR  R22
000210 95f7      	ROR  R31
000211 95e7      	ROR  R30
000212 955a      	DEC  R21
000213 f7d1      	BRNE __CFD14
                 __CFD15:
000214 2000      	TST  R0
000215 f40a      	BRPL __CFD16
000216 df29      	RCALL __ANEGD1
                 __CFD16:
000217 915f      	POP  R21
000218 9508      	RET
                 
                 __CDF1U:
000219 9468      	SET
00021a c001      	RJMP __CDF1U0
                 __CDF1:
00021b 94e8      	CLT
                 __CDF1U0:
00021c 9730      	SBIW R30,0
00021d 4060      	SBCI R22,0
00021e 4070      	SBCI R23,0
00021f f0b1      	BREQ __CDF10
000220 2400      	CLR  R0
000221 f026      	BRTS __CDF11
000222 2377      	TST  R23
000223 f412      	BRPL __CDF11
000224 9400      	COM  R0
000225 df1a      	RCALL __ANEGD1
                 __CDF11:
000226 2e17      	MOV  R1,R23
000227 e17e      	LDI  R23,30
000228 2011      	TST  R1
                 __CDF12:
000229 f032      	BRMI __CDF13
00022a 957a      	DEC  R23
00022b 0fee      	LSL  R30
00022c 1fff      	ROL  R31
00022d 1f66      	ROL  R22
00022e 1c11      	ROL  R1
00022f cff9      	RJMP __CDF12
                 __CDF13:
000230 2fef      	MOV  R30,R31
000231 2ff6      	MOV  R31,R22
000232 2d61      	MOV  R22,R1
000233 935f      	PUSH R21
000234 df8a      	RCALL __REPACK
000235 915f      	POP  R21
                 __CDF10:
000236 9508      	RET
                 
                 __ZERORES:
000237 27ee      	CLR  R30
000238 27ff      	CLR  R31
000239 01bf      	MOVW R22,R30
00023a 915f      	POP  R21
00023b 9508      	RET
                 
                 __MINRES:
00023c efef      	SER  R30
00023d efff      	SER  R31
00023e e76f      	LDI  R22,0x7F
00023f ef7f      	SER  R23
000240 915f      	POP  R21
000241 9508      	RET
                 
                 __MAXRES:
000242 efef      	SER  R30
000243 efff      	SER  R31
000244 e76f      	LDI  R22,0x7F
000245 e77f      	LDI  R23,0x7F
000246 915f      	POP  R21
000247 9508      	RET
                 
                 __MULF12:
000248 935f      	PUSH R21
000249 df87      	RCALL __UNPACK
00024a 3870      	CPI  R23,0x80
00024b f359      	BREQ __ZERORES
00024c 3890      	CPI  R25,0x80
00024d f349      	BREQ __ZERORES
00024e 2401      	EOR  R0,R1
00024f 9408      	SEC
000250 1f79      	ADC  R23,R25
000251 f423      	BRVC __MULF124
000252 f324      	BRLT __ZERORES
                 __MULF125:
000253 2000      	TST  R0
000254 f33a      	BRMI __MINRES
000255 cfec      	RJMP __MAXRES
                 __MULF124:
000256 920f      	PUSH R0
000257 931f      	PUSH R17
000258 932f      	PUSH R18
000259 933f      	PUSH R19
00025a 934f      	PUSH R20
00025b 2711      	CLR  R17
00025c 2722      	CLR  R18
00025d 2799      	CLR  R25
00025e 9f68      	MUL  R22,R24
00025f 01a0      	MOVW R20,R0
000260 9f8f      	MUL  R24,R31
000261 2d30      	MOV  R19,R0
000262 0d41      	ADD  R20,R1
000263 1f59      	ADC  R21,R25
000264 9f6b      	MUL  R22,R27
000265 0d30      	ADD  R19,R0
000266 1d41      	ADC  R20,R1
000267 1f59      	ADC  R21,R25
000268 9f8e      	MUL  R24,R30
000269 d027      	RCALL __MULF126
00026a 9fbf      	MUL  R27,R31
00026b d025      	RCALL __MULF126
00026c 9f6a      	MUL  R22,R26
00026d d023      	RCALL __MULF126
00026e 9fbe      	MUL  R27,R30
00026f d01d      	RCALL __MULF127
000270 9faf      	MUL  R26,R31
000271 d01b      	RCALL __MULF127
000272 9fae      	MUL  R26,R30
000273 0d11      	ADD  R17,R1
000274 1f29      	ADC  R18,R25
000275 1f39      	ADC  R19,R25
000276 1f49      	ADC  R20,R25
000277 1f59      	ADC  R21,R25
000278 2fe3      	MOV  R30,R19
000279 2ff4      	MOV  R31,R20
00027a 2f65      	MOV  R22,R21
00027b 2f52      	MOV  R21,R18
00027c 914f      	POP  R20
00027d 913f      	POP  R19
00027e 912f      	POP  R18
00027f 911f      	POP  R17
000280 900f      	POP  R0
000281 2366      	TST  R22
000282 f02a      	BRMI __MULF122
000283 0f55      	LSL  R21
000284 1fee      	ROL  R30
000285 1fff      	ROL  R31
000286 1f66      	ROL  R22
000287 c002      	RJMP __MULF123
                 __MULF122:
000288 9573      	INC  R23
000289 f24b      	BRVS __MULF125
                 __MULF123:
00028a df2a      	RCALL __ROUND_REPACK
00028b 915f      	POP  R21
00028c 9508      	RET
                 
                 __MULF127:
00028d 0d10      	ADD  R17,R0
00028e 1d21      	ADC  R18,R1
00028f 1f39      	ADC  R19,R25
000290 c002      	RJMP __MULF128
                 __MULF126:
000291 0d20      	ADD  R18,R0
000292 1d31      	ADC  R19,R1
                 __MULF128:
000293 1f49      	ADC  R20,R25
000294 1f59      	ADC  R21,R25
000295 9508      	RET
                 
                 _delay_ms:
000296 9610      	adiw r26,0
000297 f039      	breq __delay_ms1
                 __delay_ms0:
000298 95a8      	wdr
                +
000299 ed80     +LDI R24 , LOW ( 0x7D0 )
00029a e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00029b 9701     +SBIW R24 , 1
00029c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00029d 9711      	sbiw r26,1
00029e f7c9      	brne __delay_ms0
                 __delay_ms1:
00029f 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  37 r1 :  21 r2 :   0 r3 :   0 r4 :   6 r5 :   1 r6 :   0 r7 :   5 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   5 r18:   7 r19:  12 r20:  15 r21:  49 r22:  43 r23:  39 
r24:  21 r25:  28 r26:  27 r27:  19 r28:   1 r29:   1 r30:  80 r31:  42 
x  :   5 y  :   0 z  :   7 
Registers used: 22 out of 35 (62.9%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  20 add   :   9 
adiw  :   2 and   :   2 andi  :   0 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   3 brcs  :   0 break :   0 breq  :   8 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   3 
brlt  :   1 brmi  :   4 brne  :  12 brpl  :   4 brsh  :   0 brtc  :   3 
brts  :   1 brvc  :   1 brvs  :   2 bset  :   0 bst   :   2 call  :   0 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  20 cls   :   0 clt   :   4 clv   :   0 clz   :   0 com   :   7 
cp    :   1 cpc   :   0 cpi   :   9 cpse  :   0 dec   :   6 des   :   0 
eor   :   4 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   4 jmp   :  22 ld    :   2 ldd   :   0 ldi   :  50 
lds   :  10 lpm   :   7 lsl   :  12 lsr   :   1 mov   :  22 movw  :  16 
mul   :   9 muls  :   0 mulsu :   0 neg   :   7 nop   :   0 or    :   0 
ori   :   0 out   :  21 pop   :  14 push  :  13 rcall :  39 ret   :  25 
reti  :   0 rjmp  :  24 rol   :  22 ror   :   7 sbc   :   5 sbci  :  10 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   6 sbr   :   2 sbrc  :   1 
sbrs  :   5 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   9 
ses   :   0 set   :   4 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   3 std   :   0 sts   :  12 sub   :   3 subi  :   1 swap  :   0 
tst   :   9 wdr   :   1 
Instructions used: 60 out of 116 (51.7%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000540   1150    194   1344   32768   4.1%
[.dseg] 0x000060 0x000308      0    168    168    2048   8.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 6 warnings
